<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="language_array">
        <item>Korean</item>
        <item>English</item>
        <item>Japanese</item>
        <item>Chinese</item>
        <item>Russian</item>
        <item>Vietnamese</item>
        <item>Thai</item>
        <item>Uzbek</item>
        <item>Khmer</item>
        <item>Filipino</item>
        <item>Nepali</item>
        <item>Indonesian</item>
        <item>Kazakh</item>
        <item>Mongolian</item>
        <item>Burmese</item>
        <item>Spanish</item>
        <item>Portuguese</item>
        <item>French</item>
        <item>German</item>
        <item>Hindi</item>
        <item>Arabic</item>
        <item>Bengali</item>
        <item>Urdu</item>
        <item>Turkish</item>
        <item>Other (specify in descriptions)</item>
    </string-array>
    <color name="black">#FF000000</color>
    <color name="color1">#F5F5F5</color>
    <color name="gray">#BEBEBEBE</color>
    <color name="green1">#2B8761</color>
    <color name="green2">#C1E1C1</color>
    <color name="green3">#86C4A9</color>
    <color name="green4">#1E6647</color>
    <color name="night_green1">#23754D</color>
    <color name="night_green2">#4F9E77</color>
    <color name="night_green3">#145436</color>
    <color name="night_green4">#0E4029</color>
    <color name="red">#FF0000</color>
    <color name="white">#FFFFFFFF</color>
    <dimen name="app_bar_height">180dp</dimen>
    <dimen name="fab_margin">16dp</dimen>
    <dimen name="text_margin">16dp</dimen>
    <string name="action_settings">Settings</string>
    <string name="app_name">gathernow</string>
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="title_activity_event_create">eventCreate</string>
    <string name="title_activity_participants_info">ParticipantsInfoActivity</string>
    <string name="title_dashboard">Dashboard</string>
    <string name="title_home">Home</string>
    <string name="title_notifications">Notifications</string>
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.DarkActionBar">
        
        <item name="colorPrimary">@color/gray</item>
        <item name="colorPrimaryDark">@color/black</item>
        <item name="colorAccent">@color/red</item>
    </style>
    <style name="Base.Theme.Gathernow" parent="Theme.Material3.DayNight.NoActionBar">
        
        
    </style>
    <style name="DangerButton">
        <item name="android:padding">10dp</item>
        <item name="android:background">@drawable/red_button_bg</item>
        <item name="android:textSize">20sp</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:layout_marginTop">10dp</item>
    </style>
    <style name="EditText">
        <item name="android:background">@drawable/edittext_bg</item>
        <item name="android:textSize">15sp</item>
        <item name="android:padding">15dp</item>
        <item name="android:layout_marginTop">10dp</item>
    </style>
    <style name="HeadingTextField">
        <item name="android:textSize">15sp</item>
        <item name="android:textStyle">bold</item>
    </style>
    <style name="NegativeButton">
        <item name="android:padding">10dp</item>
        <item name="android:background">@drawable/white_button_bg</item>
        <item name="android:textSize">20sp</item>
        <item name="android:textColor">@color/black</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:layout_marginTop">10dp</item>
    </style>
    <style name="PositiveButton">
        <item name="android:background">@drawable/button_bg</item>
        <item name="android:textSize">20sp</item>
        <item name="android:padding">10dp</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:layout_marginTop">10dp</item>
    </style>
    <style name="RedItalicText">
        <item name="android:textSize">15dp</item>
        <item name="android:textStyle">italic</item>
        <item name="android:textColor">#FF0000</item>
    </style>
    <style name="TextField">
        <item name="android:textSize">15sp</item>
    </style>
    <style name="Theme.Gathernow" parent="Theme.Gathernow.Custom"/>
    <style name="Theme.Gathernow.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar"/>
    <style name="Theme.Gathernow.Custom" parent="Base.Theme.Gathernow">
        
        <item name="colorPrimary">#2B8761</item>
        
        <item name="colorPrimaryVariant">#247050</item>
        
        <item name="colorOnPrimary">#FFFFFF</item>
        
        <item name="colorSecondary">@color/green1</item>
        
        <item name="colorOnSecondary">#000000</item>
        <item name="colorPrimaryDark">#24734D</item>

        
    </style>
    <style name="Theme.Gathernow.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>
    <style name="Theme.Gathernow.PopupOverlay" parent="ThemeOverlay.AppCompat.Light"/>
    <style name="TitleField">
        <item name="android:textSize">20sp</item>
        <item name="android:textStyle">bold</item>
        <item name="android:layout_marginTop">10dp</item>
    </style>
    <declare-styleable name="EventCardView">
        <attr format="reference" name="event_photo"/>
        <attr format="string" name="event_name"/>
        <attr format="string" name="event_capacity"/>
        <attr format="string" name="event_language"/>
        <attr format="string" name="event_datetime"/>
        <attr format="string" name="event_location"/>
        
    </declare-styleable>
</resources>