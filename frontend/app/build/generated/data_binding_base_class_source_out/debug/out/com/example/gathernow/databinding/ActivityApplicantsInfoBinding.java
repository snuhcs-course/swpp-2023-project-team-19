// Generated by view binder compiler. Do not edit!
package com.example.gathernow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gathernow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityApplicantsInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final LinearLayout container1;

  @NonNull
  public final TextView eventName;

  @NonNull
  public final RelativeLayout noApplicant;

  @NonNull
  public final TextView noEventText;

  @NonNull
  public final ImageView sadFrog;

  @NonNull
  public final TextView subtitleText;

  private ActivityApplicantsInfoBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout container, @NonNull LinearLayout container1,
      @NonNull TextView eventName, @NonNull RelativeLayout noApplicant,
      @NonNull TextView noEventText, @NonNull ImageView sadFrog, @NonNull TextView subtitleText) {
    this.rootView = rootView;
    this.container = container;
    this.container1 = container1;
    this.eventName = eventName;
    this.noApplicant = noApplicant;
    this.noEventText = noEventText;
    this.sadFrog = sadFrog;
    this.subtitleText = subtitleText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityApplicantsInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityApplicantsInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_applicants_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityApplicantsInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      LinearLayout container1 = (LinearLayout) rootView;

      id = R.id.event_name;
      TextView eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.no_applicant;
      RelativeLayout noApplicant = ViewBindings.findChildViewById(rootView, id);
      if (noApplicant == null) {
        break missingId;
      }

      id = R.id.no_event_text;
      TextView noEventText = ViewBindings.findChildViewById(rootView, id);
      if (noEventText == null) {
        break missingId;
      }

      id = R.id.sad_frog;
      ImageView sadFrog = ViewBindings.findChildViewById(rootView, id);
      if (sadFrog == null) {
        break missingId;
      }

      id = R.id.subtitle_text;
      TextView subtitleText = ViewBindings.findChildViewById(rootView, id);
      if (subtitleText == null) {
        break missingId;
      }

      return new ActivityApplicantsInfoBinding((LinearLayout) rootView, container, container1,
          eventName, noApplicant, noEventText, sadFrog, subtitleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
