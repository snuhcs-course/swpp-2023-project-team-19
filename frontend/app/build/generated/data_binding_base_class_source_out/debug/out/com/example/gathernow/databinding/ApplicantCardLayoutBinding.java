// Generated by view binder compiler. Do not edit!
package com.example.gathernow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gathernow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ApplicantCardLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatButton accepted;

  @NonNull
  public final TextView applicantContact;

  @NonNull
  public final ImageView applicantImage;

  @NonNull
  public final TextView applicantMessage;

  @NonNull
  public final TextView applicantName;

  @NonNull
  public final AppCompatButton approveButton;

  @NonNull
  public final ConstraintLayout constraint1;

  @NonNull
  public final ConstraintLayout constraint2;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final AppCompatButton rejectButton;

  private ApplicantCardLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatButton accepted, @NonNull TextView applicantContact,
      @NonNull ImageView applicantImage, @NonNull TextView applicantMessage,
      @NonNull TextView applicantName, @NonNull AppCompatButton approveButton,
      @NonNull ConstraintLayout constraint1, @NonNull ConstraintLayout constraint2,
      @NonNull LinearLayout linear, @NonNull AppCompatButton rejectButton) {
    this.rootView = rootView;
    this.accepted = accepted;
    this.applicantContact = applicantContact;
    this.applicantImage = applicantImage;
    this.applicantMessage = applicantMessage;
    this.applicantName = applicantName;
    this.approveButton = approveButton;
    this.constraint1 = constraint1;
    this.constraint2 = constraint2;
    this.linear = linear;
    this.rejectButton = rejectButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ApplicantCardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ApplicantCardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.applicant_card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ApplicantCardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accepted;
      AppCompatButton accepted = ViewBindings.findChildViewById(rootView, id);
      if (accepted == null) {
        break missingId;
      }

      id = R.id.applicant_contact;
      TextView applicantContact = ViewBindings.findChildViewById(rootView, id);
      if (applicantContact == null) {
        break missingId;
      }

      id = R.id.applicant_image;
      ImageView applicantImage = ViewBindings.findChildViewById(rootView, id);
      if (applicantImage == null) {
        break missingId;
      }

      id = R.id.applicant_message;
      TextView applicantMessage = ViewBindings.findChildViewById(rootView, id);
      if (applicantMessage == null) {
        break missingId;
      }

      id = R.id.applicant_name;
      TextView applicantName = ViewBindings.findChildViewById(rootView, id);
      if (applicantName == null) {
        break missingId;
      }

      id = R.id.approve_button;
      AppCompatButton approveButton = ViewBindings.findChildViewById(rootView, id);
      if (approveButton == null) {
        break missingId;
      }

      id = R.id.constraint1;
      ConstraintLayout constraint1 = ViewBindings.findChildViewById(rootView, id);
      if (constraint1 == null) {
        break missingId;
      }

      id = R.id.constraint2;
      ConstraintLayout constraint2 = ViewBindings.findChildViewById(rootView, id);
      if (constraint2 == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.reject_button;
      AppCompatButton rejectButton = ViewBindings.findChildViewById(rootView, id);
      if (rejectButton == null) {
        break missingId;
      }

      return new ApplicantCardLayoutBinding((RelativeLayout) rootView, accepted, applicantContact,
          applicantImage, applicantMessage, applicantName, approveButton, constraint1, constraint2,
          linear, rejectButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
