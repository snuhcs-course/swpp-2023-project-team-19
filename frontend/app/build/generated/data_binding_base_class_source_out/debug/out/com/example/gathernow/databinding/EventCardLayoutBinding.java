// Generated by view binder compiler. Do not edit!
package com.example.gathernow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gathernow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventCardLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView eventCapacity;

  @NonNull
  public final TextView eventDatetime;

  @NonNull
  public final TextView eventLanguage;

  @NonNull
  public final TextView eventLocation;

  @NonNull
  public final TextView eventName;

  @NonNull
  public final ImageView eventPhoto;

  private EventCardLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView eventCapacity,
      @NonNull TextView eventDatetime, @NonNull TextView eventLanguage,
      @NonNull TextView eventLocation, @NonNull TextView eventName, @NonNull ImageView eventPhoto) {
    this.rootView = rootView;
    this.eventCapacity = eventCapacity;
    this.eventDatetime = eventDatetime;
    this.eventLanguage = eventLanguage;
    this.eventLocation = eventLocation;
    this.eventName = eventName;
    this.eventPhoto = eventPhoto;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventCardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventCardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventCardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.event_capacity;
      TextView eventCapacity = ViewBindings.findChildViewById(rootView, id);
      if (eventCapacity == null) {
        break missingId;
      }

      id = R.id.event_datetime;
      TextView eventDatetime = ViewBindings.findChildViewById(rootView, id);
      if (eventDatetime == null) {
        break missingId;
      }

      id = R.id.event_language;
      TextView eventLanguage = ViewBindings.findChildViewById(rootView, id);
      if (eventLanguage == null) {
        break missingId;
      }

      id = R.id.event_location;
      TextView eventLocation = ViewBindings.findChildViewById(rootView, id);
      if (eventLocation == null) {
        break missingId;
      }

      id = R.id.event_name;
      TextView eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.event_photo;
      ImageView eventPhoto = ViewBindings.findChildViewById(rootView, id);
      if (eventPhoto == null) {
        break missingId;
      }

      return new EventCardLayoutBinding((RelativeLayout) rootView, eventCapacity, eventDatetime,
          eventLanguage, eventLocation, eventName, eventPhoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
