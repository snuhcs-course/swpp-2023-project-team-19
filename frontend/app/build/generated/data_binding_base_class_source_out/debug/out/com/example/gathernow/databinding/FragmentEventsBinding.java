// Generated by view binder compiler. Do not edit!
package com.example.gathernow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gathernow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEventsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView confirmedText;

  @NonNull
  public final TextView discoverNew;

  @NonNull
  public final TextView dividerText;

  @NonNull
  public final LinearLayout eventCardContainer;

  @NonNull
  public final LinearLayout layoutOne;

  @NonNull
  public final LinearLayout layoutTwo;

  @NonNull
  public final LinearLayout layoutTwoSub;

  @NonNull
  public final RelativeLayout loadingLayout;

  @NonNull
  public final RelativeLayout noEventLayout;

  @NonNull
  public final TextView noEventText;

  @NonNull
  public final TextView noEventsText;

  @NonNull
  public final TextView pendingText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ImageView sadFrog;

  @NonNull
  public final ImageView sadFrog1;

  @NonNull
  public final TextView subtitleText;

  @NonNull
  public final TextView titleText;

  private FragmentEventsBinding(@NonNull LinearLayout rootView, @NonNull TextView confirmedText,
      @NonNull TextView discoverNew, @NonNull TextView dividerText,
      @NonNull LinearLayout eventCardContainer, @NonNull LinearLayout layoutOne,
      @NonNull LinearLayout layoutTwo, @NonNull LinearLayout layoutTwoSub,
      @NonNull RelativeLayout loadingLayout, @NonNull RelativeLayout noEventLayout,
      @NonNull TextView noEventText, @NonNull TextView noEventsText, @NonNull TextView pendingText,
      @NonNull ProgressBar progressBar, @NonNull ImageView sadFrog, @NonNull ImageView sadFrog1,
      @NonNull TextView subtitleText, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.confirmedText = confirmedText;
    this.discoverNew = discoverNew;
    this.dividerText = dividerText;
    this.eventCardContainer = eventCardContainer;
    this.layoutOne = layoutOne;
    this.layoutTwo = layoutTwo;
    this.layoutTwoSub = layoutTwoSub;
    this.loadingLayout = loadingLayout;
    this.noEventLayout = noEventLayout;
    this.noEventText = noEventText;
    this.noEventsText = noEventsText;
    this.pendingText = pendingText;
    this.progressBar = progressBar;
    this.sadFrog = sadFrog;
    this.sadFrog1 = sadFrog1;
    this.subtitleText = subtitleText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEventsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEventsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_events, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEventsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirmed_text;
      TextView confirmedText = ViewBindings.findChildViewById(rootView, id);
      if (confirmedText == null) {
        break missingId;
      }

      id = R.id.discover_new;
      TextView discoverNew = ViewBindings.findChildViewById(rootView, id);
      if (discoverNew == null) {
        break missingId;
      }

      id = R.id.divider_text;
      TextView dividerText = ViewBindings.findChildViewById(rootView, id);
      if (dividerText == null) {
        break missingId;
      }

      id = R.id.eventCardContainer;
      LinearLayout eventCardContainer = ViewBindings.findChildViewById(rootView, id);
      if (eventCardContainer == null) {
        break missingId;
      }

      id = R.id.layout_one;
      LinearLayout layoutOne = ViewBindings.findChildViewById(rootView, id);
      if (layoutOne == null) {
        break missingId;
      }

      id = R.id.layout_two;
      LinearLayout layoutTwo = ViewBindings.findChildViewById(rootView, id);
      if (layoutTwo == null) {
        break missingId;
      }

      id = R.id.layout_two_sub;
      LinearLayout layoutTwoSub = ViewBindings.findChildViewById(rootView, id);
      if (layoutTwoSub == null) {
        break missingId;
      }

      id = R.id.loading_layout;
      RelativeLayout loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }

      id = R.id.no_event_layout;
      RelativeLayout noEventLayout = ViewBindings.findChildViewById(rootView, id);
      if (noEventLayout == null) {
        break missingId;
      }

      id = R.id.no_event_text;
      TextView noEventText = ViewBindings.findChildViewById(rootView, id);
      if (noEventText == null) {
        break missingId;
      }

      id = R.id.no_events_text;
      TextView noEventsText = ViewBindings.findChildViewById(rootView, id);
      if (noEventsText == null) {
        break missingId;
      }

      id = R.id.pending_text;
      TextView pendingText = ViewBindings.findChildViewById(rootView, id);
      if (pendingText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.sad_frog;
      ImageView sadFrog = ViewBindings.findChildViewById(rootView, id);
      if (sadFrog == null) {
        break missingId;
      }

      id = R.id.sad_frog1;
      ImageView sadFrog1 = ViewBindings.findChildViewById(rootView, id);
      if (sadFrog1 == null) {
        break missingId;
      }

      id = R.id.subtitle_text;
      TextView subtitleText = ViewBindings.findChildViewById(rootView, id);
      if (subtitleText == null) {
        break missingId;
      }

      id = R.id.title_text;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new FragmentEventsBinding((LinearLayout) rootView, confirmedText, discoverNew,
          dividerText, eventCardContainer, layoutOne, layoutTwo, layoutTwoSub, loadingLayout,
          noEventLayout, noEventText, noEventsText, pendingText, progressBar, sadFrog, sadFrog1,
          subtitleText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
